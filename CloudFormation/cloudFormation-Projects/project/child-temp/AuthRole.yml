AWSTemplateFormatVersion: "2010-09-09"
Resources:
  JenkS3Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: cf-s3-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: "/"
      Policies:
        - PolicyName: cf-s3-policies
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: 'arn:aws:s3:::*'
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: cf-s3-ins-profile
      Path: "/"
      Roles:
        - !Ref JenkS3Role

  beanStalkEC2Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: aws-elasticbeanstalk-ec2-access-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier
  BeanstalkInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: elastic-beanstalk-ins-profile
      Path: "/"
      Roles:
        - !Ref beanStalkEC2Role
Outputs:
  S3RoleDetails:
    Description: CICD S3 ROLE
    Value: !Ref InstanceProfile
    Export:
      Name: JenkS3Role-InstanceProfileName
  
  beanstalkInstanceProfileDetails:
    Description: Instance profile attached to the elasticbeanstalk environment
    Value: !Ref BeanstalkInstanceProfile
    Export:
      Name: ElasticBeanstalk-InstancProfile-Details