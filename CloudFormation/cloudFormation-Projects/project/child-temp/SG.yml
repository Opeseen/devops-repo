AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  MyIPAddress:
    Type: String

Resources:
  JenkinsSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: JenkinsInstanceSG
      GroupDescription: Allow 8080(Jenkins) and SSH to connect
      VpcId: !ImportValue Vpc-ID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
      - Key: "Name"
        Value: "bankApp-Jenkins_SG"

  BeanstalkEnvSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: BeanstalkInstanceSG
      GroupDescription: Allow 22(SSH) only from my ip
      VpcId: !ImportValue Vpc-ID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref MyIPAddress
      Tags:
        - Key: "Name"
          Value: "BeanStalkEnv_SG"

  BeanStalkLoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: BeanstalkLBSG
      GroupDescription: Allow 80(Load balancer) from anywhere
      VpcId: !ImportValue Vpc-ID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 0
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: "Name"
          Value: "BeanStalkLB_SG"

Outputs:
  JenkinsSGID:
    Value: !GetAtt
      - JenkinsSG
      - GroupId
    Export:
      Name: Jenkins-SecurityGroupID

  BeanStalkEnvSGID:
    Value: !GetAtt BeanstalkEnvSG.GroupId
    Export:
      Name: BeanstalkEnv-SecurityGroupID

  BeanStalkLBSGID:
    Value: !GetAtt BeanStalkLoadBalancerSG.GroupId
    Export:
      Name: BeanstalkELB-SecurityGroupID