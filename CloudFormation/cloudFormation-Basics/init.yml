Parameters:
  NameOfService:
    Description: "The name of the service this stack is to be used for"
    Type: String
  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m1.small
      - m1.large
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.
  KeyName:
    Description: Name of all EC2 login keys in my account
    Type: AWS::EC2::KeyPair::KeyName

Mappings: 
  RegionMap: 
    us-east-1: 
      "AMI": "ami-0277155c3f0ab2930"
    us-east-2: 
      "AMI": "ami-0c20d88b0021158c6"
    eu-west-1: 
      "AMI": "ami-047bb4163c506cd98"
    ap-southeast-1: 
      "AMI": "ami-08569b978cc4dfa10"
    ap-northeast-1: 
      "AMI": "ami-06cd52961ce9f0d85"

Resources:
  MyInstance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init: 
        config: 
          packages:
            yum:
              php: []
              httpd: []
              wget: []
              unzip: []
              git: []
          commands:
            test:
              command: "wget https://www.tooplate.com/zip-templates/2119_gymso_fitness.zip && unzip 2119_gymso_fitness.zip && cp -r 2119_gymso_fitness/* /var/www/html/"
          files:
            /var/www/html/hello.html:
              content: !Sub |
                <!DOCTYPE html>
                <html>
                  <body>
                    <h1>Welcome to CloudFormation.</h1>
                    <p>This site is deployed by CloudFormation.</p>
                  </body>
                </html>
          services:
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true
            
    Properties:
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref KeyName
      # Get tyhe AMI Id through the mapping
      ImageId: !FindInMap
        - RegionMap
        - !Ref AWS::Region
        - AMI
      # Adding tags to the Instance
      Tags:
       - Key: "Name"
         Value: !Ref NameOfService
       - Key: "Tag2"
         Value: !Join
            - " "
            - - "My instances in"
              - !Ref AWS::Region
      SecurityGroups:
        - !Ref MyInstanceSG
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe            
            # Ensure AWS CFN Bootstrap is the latest
            yum install -y aws-cfn-bootstrap
            # Install the files and packages from the metadata
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource MyInstance  --region ${AWS::Region}
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource MyInstance  --region ${AWS::Region}

  MyInstanceSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http and ssh to client host
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
       - Key: "Name"
         Value: !Join [" ", ["C-SG", "in", !Ref AWS::Region] ]
         
Outputs:
  PrintSomeInfo:
    Value: !GetAtt
      - MyInstance
      - PublicDnsName
  
